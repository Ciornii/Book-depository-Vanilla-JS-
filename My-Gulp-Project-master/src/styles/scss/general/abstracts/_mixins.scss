/**
 * Mixins
 */

// ------------------------------------------------------- text
// @include font-size(16px);
// @include text-shorten;
// ------------------------------------------------------- position
// @include center_absolute(both);
// @include align(true, false, relative);
// @include full-absolute();
// @include center_block;
// ------------------------------------------------------- dimensions
// @include min-height(500px);
// @include height(500px);
// @include height(500px);
// ------------------------------------------------------- images and backgrounds
// @include responsive_img;
// @include replace-text(url("/images/mail.svg"), 0);
// @include cover-background;
// ------------------------------------------------------- Media queries
// @include media-max();
// @include media-min();
// @include media-minmax();
// @include mq('tablet-wide')
// ------------------------------------------------------- others
// @include clearfix;
// @include fontAwesome;
// @include aspect-ratio(4, 3);
// @include fade(hide);
// @include cs-button($backgroundColor, $triangleColor, $hasStar: false, $height: 30, $beforeWidth: 30%);




// ------------------------------------------------------- text
@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

@mixin text-shorten {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}


// ------------------------------------------------------- position
@mixin center_absolute($position) {
    position: absolute;

    @if $position=="vertical" {
        top: 50%;
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    @else if $position=="horizontal" {
        left: 50%;
        -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        transform: translate(-50%);
    }

    @else if $position=="both" {
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
}

@mixin align($vertical: true, $horizontal: false, $position: relative) {
    @if $position {
        position: $position;
    }

    @if $vertical {
        top: 50%;
    }

    @if $horizontal {
        left: 50%;
    }

    @if $vertical and $horizontal {
        transform: translateX(-50%) translateY(-50%);
    }

    @else if $vertical {
        transform: translateY(-50%);
    }

    @else {
        transform: translateX(-50%);
    }
}

@mixin center_block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

@mixin full-absolute($position: absolute) {
    bottom: 0;
    left: 0;
    position: $position;
    right: 0;
    top: 0;
}


// ------------------------------------------------------- dimensions
@mixin min-height($size) {
    min-height: $size;
    min-height: calculateRem($size);
}

@mixin height($size) {
    height: $size;
    height: calculateRem($size);
}

@mixin height($size) {
    height: $size;
    height: calculateRem($size);
}


// ------------------------------------------------------- images and backgrounds
@mixin responsive_img {
    display: block;
    width: 100%;
    height: auto;
}

@mixin replace-text($image, $x: 50%, $y: 50%) {
    text-indent: -99999em;
    overflow: hidden;
    text-align: left;

    background: {
        image: $image;
        repeat: no-repeat;
        position: $x $y;
    }
}

@mixin cover-background {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}


// ------------------------------------------------------- Media queries
@mixin media-max($media) {
    @media only screen and (max-width: $media) {
        @content;
    }
}

@mixin media-min($media) {
    @media only screen and (min-width: $media) {
        @content;
    }
}

@mixin media-minmax($min, $max) {
    @media only screen and (min-width: $min) and (max-width: $max) {
        @content;
    }
}

$breakpoints: ("phone": 400px,
    "phone-wide": 480px,
    "phablet": 560px,
    "tablet-small": 640px,
    "tablet": 768px,
    "tablet-wide": 1024px,
    "desktop": 1248px,
    "desktop-wide": 1440px);

@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);

        @if $type==max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}


// ------------------------------------------------------- others
@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin fontAwesome {
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    font-family: "Font Awesome 5 Free";
}

@mixin aspect-ratio($width, $height) {
    position: relative;

    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    >.inner-box {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
}

@mixin fade($type) {

    @if $type=='hide' {
        visibility: hidden;
        opacity: 0;
        transition: visibility 1s, opacity 1s;
    }

    @else if $type=='show' {
        visibility: visible;
        opacity: 1;
        transition: visibility 1s, opacity 1s;
    }

}

@mixin cs-button($backgroundColor, $triangleColor, $hasStar: false, $height: 30, $beforeWidth: 30%) {
    background-color: $backgroundColor;
    border: 0;
    border-radius: 0;
    color: #fff;
    font-family: 'myriad-boldCond';
    font-size: 1.7rem;
    height: if($height !=30, #{ $height }px, 30px);
    line-height: normal;
    outline: 0;
    overflow: hidden;
    padding: if($hasStar==true, 0 #{ $height - 15 }px 0 20px, 0 15px);
    position: relative;
    text-align: center;
    transition: background-color .4s cubic-bezier(.25, .8, .25, 1);

    @include flexbox();
    @include justify-content(center);
    @include align-items(center);

    &:before {
        background-color: $triangleColor;
        content: '';
        left: -30%;
        height: 100%;
        position: absolute;
        top: 0;
        transform: skew(-26deg);
        transform-origin: bottom;
        transition: background-color .4s cubic-bezier(.25, .8, .25, 1);
        width: $beforeWidth;
    }

    &:hover:not([disabled]),
    &:focus:not([disabled]) {
        background-color: $triangleColor;
        color: #fff;

        span[class*='icon-'] {
            color: $backgroundColor;
        }

        &:before {
            background-color: $backgroundColor;
        }
    }

    &[disabled] {
        background-color: $button-dark-gray;
        color: $gray;
        cursor: default;

        &:before {
            background-color: $button-light-gray;
        }
    }

    i {
        font-size: 1.8rem;
        height: 1.8rem;
        margin-right: 5px;
        width: 1.8rem;

        @include flexbox();
        @include align-items(center);
        @include justify-content(center);
    }

    span[class*='icon-'] {
        color: $triangleColor;
        font-size: #{ $height }px;
        height: #{ $height }px;
        line-height: #{ $height }px;
        position: absolute;
        right: -9px;
        top: 0;
        transition: color .4s cubic-bezier(.25, .8, .25, 1);
        width: #{ $height }px;
    }

    // FF fix - content not aligned properly
    >div {
        @include flexbox();
        @include align-items(center);
    }
}